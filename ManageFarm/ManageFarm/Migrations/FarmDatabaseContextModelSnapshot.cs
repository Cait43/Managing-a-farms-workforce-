// <auto-generated />
using System;
using ManageFarm.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManageFarm.Migrations
{
    [DbContext(typeof(FarmDatabaseContext))]
    partial class FarmDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManageFarm.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Crop")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK__Field__3214EC0700A8E46B");

                    b.ToTable("Field", (string)null);
                });

            modelBuilder.Entity("ManageFarm.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("NextTestDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK__Machine__3214EC07FBCF565C");

                    b.HasIndex("FieldId");

                    b.ToTable("Machine", (string)null);
                });

            modelBuilder.Entity("ManageFarm.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ContactInfo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal?>("HourlyWage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Role")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK__Staff__3214EC07F67B145D");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("ManageFarm.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK__Task__3214EC07166E2760");

                    b.HasIndex("FieldId");

                    b.HasIndex("MachineId");

                    b.HasIndex("StaffId");

                    b.ToTable("Task", (string)null);
                });

            modelBuilder.Entity("ManageFarm.Models.Machine", b =>
                {
                    b.HasOne("ManageFarm.Models.Field", "Field")
                        .WithMany("Machines")
                        .HasForeignKey("FieldId")
                        .HasConstraintName("Machine_Field_Id");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ManageFarm.Models.Task", b =>
                {
                    b.HasOne("ManageFarm.Models.Field", "Field")
                        .WithMany("Tasks")
                        .HasForeignKey("FieldId")
                        .HasConstraintName("Task_Field_Id");

                    b.HasOne("ManageFarm.Models.Machine", "Machine")
                        .WithMany("Tasks")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("Task_Machine_Id");

                    b.HasOne("ManageFarm.Models.Staff", "Staff")
                        .WithMany("Tasks")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("Task_Staff_Id");

                    b.Navigation("Field");

                    b.Navigation("Machine");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ManageFarm.Models.Field", b =>
                {
                    b.Navigation("Machines");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ManageFarm.Models.Machine", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ManageFarm.Models.Staff", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
